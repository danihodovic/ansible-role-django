---
kind: pipeline
type: docker
name: default

volumes:
  - name: cache
    host:
      path: /tmp/drone-cache

workspace:
  path: ${DRONE_REPO_NAME}

steps:
  - name: restore-cache-with-filesystem
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      restore: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "requirements.txt" }}'
      archive_format: "gzip"
      mount:
        - '.virtualenv'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: install-dependencies
    image: python:3.8
    commands:
      # If the virtualenv dir is not cached create it
      - '[ ! -d ".virtualenv" ] && python -m venv .virtualenv'
      - . .virtualenv/bin/activate
      - pip install -r requirements.txt

  - name: test
    image: python:3.8
    environment:
      DO_API_TOKEN:
        from_secret: DO_API_TOKEN
      USER: root
      ANSIBLE_FORCE_COLOR: '1'
    commands:
      - . .virtualenv/bin/activate
      - molecule test
      - black --check .
      - isort --check-only .

  - name: rebuild-cache-with-filesystem
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "requirements.txt" }}'
      archive_format: "gzip"
      mount:
        - '.virtualenv'
    volumes:
    - name: cache
      path: /tmp/cache

  - name: fail-on-debug-instruction
    image: alpine
    commands:
      - grep '|| sleep' .drone.yml || exit 1
