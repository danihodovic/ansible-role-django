---
kind: pipeline
type: docker
name: default

volumes:
  - name: cache
    host:
      path: /tmp/drone-cache
  - name: molecule-config
    temp: {}

workspace:
  path: ${DRONE_REPO_NAME}

steps:
  - name: restore-cache
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      restore: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "requirements.txt" }}'
      archive_format: "gzip"
      mount:
        - '.virtualenv'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: install-dependencies
    depends_on: [restore-cache]
    image: python:3.9.1
    commands:
      # If the virtualenv dir is not cached create it
      - '[ ! -d ".virtualenv" ] && python -m venv .virtualenv'
      - . .virtualenv/bin/activate
      - pip install -r requirements.txt

  - &common
    name: molecule-create
    depends_on: [install-dependencies]
    image: python:3.9.1
    volumes:
      - name: molecule-config
        path: /molecule
    environment:
      MOLECULE_EPHEMERAL_DIRECTORY: /molecule
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_REGION: eu-west-1
      USER: root
      ANSIBLE_FORCE_COLOR: '1'
    commands:
      - . .virtualenv/bin/activate
      - ansible-galaxy install -r requirements.yml
      - molecule syntax
      - molecule destroy
      - molecule create

  - <<: *common
    name: molecule-converge
    depends_on: [molecule-create]
    commands:
      - . .virtualenv/bin/activate
      - ansible-galaxy install -r requirements.yml
      - molecule converge

  - <<: *common
    name: molecule-verify
    depends_on: [molecule-converge]
    commands:
      - . .virtualenv/bin/activate
      - molecule verify

  - <<: *common
    depends_on: [molecule-verify]
    name: molecule-destroy
    commands:
      - . .virtualenv/bin/activate
      - molecule destroy
    when:
      # Run regardless of prior success or failure
      status:
        - success
        - failure

  - <<: *common
    name: lint-py
    commands:
      - . .virtualenv/bin/activate
      - black --check .
      - isort --check-only .


  - name: rebuild-cache
    depends_on: [install-dependencies]
    image: meltwater/drone-cache:dev
    pull: true
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: '{{ .Repo.Name }}_{{ checksum "requirements.txt" }}'
      archive_format: "gzip"
      mount:
        - '.virtualenv'
    volumes:
    - name: cache
      path: /tmp/cache

  - name: fail-on-debug-instruction
    image: alpine
    commands:
      - grep '|| sleep' .drone.yml || exit 1
